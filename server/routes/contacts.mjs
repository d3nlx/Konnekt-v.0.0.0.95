import express from "express";
import { User } from "../models/user.mjs";

const router = express.Router();

// ‚úÖ –≤–µ—Ä–Ω—É—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
router.get("/", async (req, res) => {
  try {
    if (!req.user) return res.status(401).json({ error: "Not logged in" });

    const me = await User.findById(req.user._id).populate("contacts", "displayName phone");
    if (!me) return res.status(404).json({ error: "User not found" });

    // üß© —É–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∫–ª–∏–µ–Ω—Ç—É
    const unique = new Map();
    for (const c of me.contacts) {
      unique.set(c._id.toString(), {
        id: c._id.toString(),
        displayName: c.displayName || c.username || c.phone || "–ë–µ–∑ –∏–º–µ–Ω–∏"
      });
    }

    res.json([...unique.values()]);
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: "Failed to load contacts" });
  }
});

// ‚úÖ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (–ø–æ ID –∏–ª–∏ –ø–æ –∏–º–µ–Ω–∏/—Ç–µ–ª–µ—Ñ–æ–Ω—É)
router.post("/", async (req, res) => {
  try {
    if (!req.user) return res.status(401).json({ error: "Not logged in" });

    const { id, query } = req.body;
    let user;

    if (id) {
      user = await User.findById(id);
    } else if (query) {
      user = await User.findOne({
        $or: [{ displayName: query }, { phone: query }]
      });
    }

    if (!user) return res.status(404).json({ error: "User not found" });

    // üîí –∑–∞—â–∏—Ç–∞ –æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —Å–µ–±—è
    if (user._id.toString() === req.user._id.toString()) {
      return res.status(400).json({ error: "Cannot add yourself" });
    }

    const me = await User.findById(req.user._id);

    // üß© –ø—Ä–æ–≤–µ—Ä—è–µ–º ‚Äî —É–∂–µ –µ—Å—Ç—å —ç—Ç–æ—Ç –∫–æ–Ω—Ç–∞–∫—Ç?
    const already = me.contacts.some(c => c.toString() === user._id.toString());
    if (already) {
      return res.status(200).json({
        message: "Contact already exists",
        id: user._id.toString(),
        displayName: user.displayName
      });
    }

    // –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º
    me.contacts.push(user._id);
    await me.save();

    res.json({ id: user._id.toString(), displayName: user.displayName });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: "Failed to add contact" });
  }
});

export default router;
